name: 'Destroy'

on:
  workflow_dispatch:
    inputs:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
        default: 'us-east-1'
      AWS_STATE_BUCKET:
        required: true
        description: 'S3 bucket to hold state that can be accesses with provided credentials'

env: # AWS CLI baked in
  AWS_ACCESS_KEY_ID: ${{ github.event.inputs.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ github.event.inputs.AWS_REGION }}
  AWS_STATE_BUCKET: ${{ github.event.inputs.AWS_STATE_BUCKET }}

jobs:
  deploy_time:
    name: 'Destroy Time'
    runs-on: ubuntu-latest
    environment: default
    defaults:
      run:
        shell: bash

    steps:
    # Checkout repository to runner
    - name: Checkout
      uses: actions/checkout@v3

    # Verify s3 access
    - name: Verify s3 Access
      id: verify_s3
      run: |
        s3_Access=$(aws s3 ls | grep $AWS_STATE_BUCKET)
        if [[ -z $s3_Access ]]; then
          echo "[ ERROR ] - The provided s3 bucket or credentials themselves are invalid..."
          exit 1
        fi

    # Install the latest version of Terraform
    - name: Terraform Install
      uses: hashicorp/setup-terraform@v2

    # Initialize Terraform, read state file, download dependencies, etc
    - name: Terraform Init
      id: init
      working-directory: terraform
      run: terraform init -backend-config="bucket=$AWS_STATE_BUCKET" -backend-config="region=$AWS_REGION"

    # Generates an execution plan for Terraform
    - name: Terraform Destroy
      id: destroy
      working-directory: terraform
      run: terraform destroy -auto-approve

